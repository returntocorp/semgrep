{
  "errors": [],
  "results": [
    {
      "check_id": "javascript.lang.correctness.useless-eqeq.eqeq-is-bad",
      "end": {
        "col": 19,
        "line": 3
      },
      "extra": {
        "lines": "console.log(x == x)",
        "message": "useless comparison operation `x == x` or `x != x`; if testing for floating point NaN, use `math.isnan`, or `cmath.isnan` if the number is complex.",
        "metadata": {},
        "metavars": {
          "$X": {
            "abstract_content": "x",
            "end": {
              "col": 14,
              "line": 3,
              "offset": 25
            },
            "start": {
              "col": 13,
              "line": 3,
              "offset": 24
            },
            "unique_id": {
              "kind": "Global",
              "sid": 1,
              "type": "id",
              "value": "x"
            }
          }
        },
        "severity": "ERROR"
      },
      "path": "targets/basic/stupid.js",
      "start": {
        "col": 13,
        "line": 3
      }
    },
    {
      "check_id": "python.django.security.injection.path-traversal.path-traversal-open.path-traversal-open",
      "end": {
        "col": 14,
        "line": 4
      },
      "extra": {
        "lines": "    path = request.get(\"unsafe\")\n\n    open(path)",
        "message": "Found request data in a call to 'open'. Ensure the request data is validated or sanitized, otherwise it could result in path traversal attacks.",
        "metadata": {
          "cwe": "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
          "owasp": "A1: Injection",
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "path",
            "end": {
              "col": 9,
              "line": 3,
              "offset": 57
            },
            "start": {
              "col": 5,
              "line": 3,
              "offset": 53
            },
            "unique_id": {
              "kind": "Local",
              "sid": 2,
              "type": "id",
              "value": "path"
            }
          },
          "$W": {
            "abstract_content": "get",
            "end": {
              "col": 23,
              "line": 3,
              "offset": 71
            },
            "start": {
              "col": 20,
              "line": 3,
              "offset": 68
            },
            "unique_id": {
              "md5sum": "<masked in tests>",
              "type": "AST"
            }
          }
        },
        "severity": "WARNING"
      },
      "path": "targets/basic/inside.py",
      "start": {
        "col": 5,
        "line": 3
      }
    },
    {
      "check_id": "python.lang.correctness.useless-eqeq.useless-eqeq",
      "end": {
        "col": 26,
        "line": 3
      },
      "extra": {
        "lines": "    return a + b == a + b",
        "message": "useless comparison operation `a+b == a+b` or `a+b != a+b`; if testing for floating point NaN, use `math.isnan(a+b)`, or `cmath.isnan(a+b)` if the number is complex.",
        "metadata": {},
        "metavars": {
          "$X": {
            "abstract_content": "a+b",
            "end": {
              "col": 17,
              "line": 3,
              "offset": 60
            },
            "start": {
              "col": 12,
              "line": 3,
              "offset": 55
            },
            "unique_id": {
              "md5sum": "<masked in tests>",
              "type": "AST"
            }
          }
        },
        "severity": "ERROR"
      },
      "path": "targets/basic/stupid.py",
      "start": {
        "col": 12,
        "line": 3
      }
    }
  ]
}