{
  "bandit": {
    "violations": {
      "3d0e53b239ed4229f9a0cc161e437fc3": {
        "tool_id": "bandit",
        "check_id": "start-process-with-a-shell",
        "path": "semgrep/setup.py",
        "message": "Starting a process with a shell, possible injection detected, security issue.",
        "severity": 2,
        "syntactic_context": "os.system(\n    os.path.join(repo_root, \"release-scripts/ubuntu-release.sh\")"
      },
      "ea9a33e97f911758b19908cde2b0e6b0": {
        "tool_id": "bandit",
        "check_id": "start-process-with-a-shell",
        "path": "semgrep/setup.py",
        "message": "Starting a process with a shell, possible injection detected, security issue.",
        "severity": 2,
        "syntactic_context": "os.system(os.path.join(repo_root, \"release-scripts/osx-release.sh\"))"
      },
      "a03ece7b789bad80c977f90f382c0fac": {
        "tool_id": "bandit",
        "check_id": "exec-used",
        "path": "semgrep/semgrep/evaluation.py",
        "message": "Use of exec detected.",
        "severity": 1,
        "syntactic_context": "exec(f\"global output; output = {where_expression}\")"
      }
    }
  },
  "dlint": {
    "violations": {}
  },
  "flake8": {
    "violations": {
      "ee01425a1f333ac3407713ce553fd1a0": {
        "tool_id": "flake8",
        "check_id": "unused-variable",
        "path": "semgrep/semgrep/evaluation.py",
        "message": "local variable 'vars' is assigned to but never used",
        "severity": 2,
        "syntactic_context": "vars = {k: v[\"abstract_content\"] for k, v in metavars.items()}"
      }
    }
  },
  "hadolint": {
    "violations": {
      "71a8303902a1c09d0903c531d9d6d982": {
        "tool_id": "hadolint",
        "check_id": "DL3003",
        "path": "Dockerfile",
        "message": "Use WORKDIR to switch to a directory",
        "severity": 1,
        "syntactic_context": "RUN eval $(opam env) && cd semgrep-core && opam install --deps-only -y . && make all\n"
      },
      "eaa1f323d1db6328b0a7014c9dff326d": {
        "tool_id": "hadolint",
        "check_id": "SC2046",
        "path": "Dockerfile",
        "message": "Quote this to prevent word splitting.",
        "severity": 1,
        "syntactic_context": "RUN eval $(opam env) && cd semgrep-core && opam install --deps-only -y . && make all\n"
      },
      "142d6e5f77de7ecb6cc818a63c935c03": {
        "tool_id": "hadolint",
        "check_id": "DL3003",
        "path": "Dockerfile",
        "message": "Use WORKDIR to switch to a directory",
        "severity": 1,
        "syntactic_context": "RUN eval $(opam env) && cd semgrep-core && opam install -y . && make all\n"
      },
      "366097962bbe29586382e586fcb7ef6d": {
        "tool_id": "hadolint",
        "check_id": "SC2046",
        "path": "Dockerfile",
        "message": "Quote this to prevent word splitting.",
        "severity": 1,
        "syntactic_context": "RUN eval $(opam env) && opam install -y ./pfff\n"
      },
      "915f3d7f2403006041adee9e22b7a0f8": {
        "tool_id": "hadolint",
        "check_id": "SC2046",
        "path": "Dockerfile",
        "message": "Quote this to prevent word splitting.",
        "severity": 1,
        "syntactic_context": "RUN eval $(opam env) && cd semgrep-core && opam install -y . && make all\n"
      }
    }
  },
  "r2c.click": {
    "violations": {}
  },
  "r2c.flask": {
    "violations": {}
  },
  "r2c.registry.latest": {
    "violations": {}
  },
  "r2c.requests": {
    "violations": {}
  },
  "semgrep": {
    "violations": {}
  },
  "shellcheck": {
    "violations": {
      "271da9f6f6e2b1f634102d17367ec28c": {
        "tool_id": "shellcheck",
        "check_id": "SC2086",
        "path": "semgrep/tests/run-perf-tests.sh",
        "message": "Double quote to prevent globbing and word splitting.",
        "severity": 0,
        "syntactic_context": "$HYPERFINE --export-markdown ${THIS_DIR}/testsuite.md \"${CMDA}\" \"${CMDB}\"\n"
      },
      "ead34c4fb69597117dccbbde1236c834": {
        "tool_id": "shellcheck",
        "check_id": "SC2086",
        "path": "semgrep/tests/run-perf-tests.sh",
        "message": "Double quote to prevent globbing and word splitting.",
        "severity": 0,
        "syntactic_context": "cat ${THIS_DIR}/testsuite.md\n"
      }
    }
  }
}
