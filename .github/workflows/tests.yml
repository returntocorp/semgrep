name: Tests

on:
  pull_request:
  push:
    branches: [master, develop]

jobs:
  build-test:
    name: semgrep-core make test and semgrep make test/qa-test
    runs-on: ubuntu-latest
    container: returntocorp/sgrep-build:2.8
    steps:
      - name: Adjust permissions
        run: |
          sudo chmod -R 777 . /github
          # github cache dir
          sudo mkdir -p /__w/
          sudo chmod -R 777 /__w/
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install submodules
        run: git submodule update --init --recursive
      - name: Install pfff
        run: eval $(opam  env --root /home/opam/.opam --set-root) && opam install -y ./pfff
      - name: Install semgrep-core
        run: eval $(opam  env --root /home/opam/.opam --set-root) && cd semgrep-core && opam install --deps-only -y . && make all && make install
      - name: Test semgrep-core
        run: eval $(opam  env --root /home/opam/.opam --set-root) && cd semgrep-core && make test && make e2etest
      - name: Install semgrep
        run: eval $(opam  env --root /home/opam/.opam --set-root) && cd semgrep && export PATH=/github/home/.local/bin:$PATH && pip3 install pipenv && pipenv install --dev
      - uses: actions/cache@v2
        with:
          path: ~/.cache/semgrep-cache
          key: semgrep-repo-cache-test
      - name: create cache dir if not exists
        run: mkdir -p ~/.cache/semgrep-cache
      - run: touch ~/.cache/semgrep-cache/ok
      - name: Test semgrep
        run: eval $(opam  env --root /home/opam/.opam --set-root) && cd semgrep && export PATH=/github/home/.local/bin:$PATH && make qa-test
        env:
          GITHUB_REPO_CACHE: ~/.cache/semgrep-cache

  mac-build-test:
    name: Check builds for macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          # This is just the Python version used to build the Nuitka executable
          python-version: 3.7
      - name: Run OSX build
        run: ./release-scripts/osx-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: semgrep-osx-${{ github.sha }}
          path: artifacts

  release-ubuntu:
    name: Check builds for ubuntu
    strategy:
      matrix:
        # The os doesn't actually matter anymore. We build a static binary linked with musl that is manylinux compatible.
        os: ['ubuntu-16.04']
    runs-on: ubuntu-latest
    container: returntocorp/sgrep-build:${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Run Ubuntu build script
        run: ./release-scripts/ubuntu-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: semgrep-${{ matrix.os }}-${{ github.sha }}
          path: artifacts.tar.gz
