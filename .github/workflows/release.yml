on:
  push:
    # Sequence of patterns matched against refs/tags
    branches:
      - '**-test-release'
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create draft release

jobs:
  create_release:
    name: Create the Github Release
    runs-on: ubuntu-latest
    needs: [ubuntu-release-script, release-osx, release-ubuntu-16-04]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

          # OSX
      - uses: actions/download-artifact@v1
        with:
          name: semgrep-osx-${{ github.sha }}
          path: semgrep-osx
      - name: Compute checksum
        run: cat ./semgrep-osx/artifacts.zip | sha256sum > ./semgrep-osx/artifacts.zip.sha256
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Upload Release Asset
        id: upload-release-asset-osx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-osx/artifacts.zip
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-osx.zip
          asset_content_type: application/zip
      - name: Upload Release Checksum
        id: upload-checksum-asset-osx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-osx/artifacts.zip.sha256
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-osx.zip.sha256
          asset_content_type: application/zip

          ## UBUNTU
      - uses: actions/download-artifact@v1
        with:
          name: semgrep-ubuntu-16.04-${{ github.sha }}
          path: semgrep-ubuntu
      - name: Compute checksum
        run: cat ./semgrep-ubuntu/artifacts.tar.gz | sha256sum > ./semgrep-ubuntu/artifacts.tar.gz.sha256
      - name: Upload Release Asset
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-ubuntu/artifacts.tar.gz
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-ubuntu-16.04.tgz
          asset_content_type: application/gzip
      - name: Upload Release Checksum
        id: upload-release-checksum-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-ubuntu/artifacts.tar.gz.sha256
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-ubuntu-16.04.tgz.sha256
          asset_content_type: application/gzip

        ## UBUNTU INSTALL SCRIPT
      - uses: actions/download-artifact@v1
        with:
          name: install-semgrep-ubuntu-generic-${{ github.sha }}
          path: semgrep-ubuntu
      - name: Compute checksum
        run: cat ./semgrep-ubuntu/installer.sh | sha256sum > ./semgrep-ubuntu/installer.sh.sha256
      - name: Upload Release Asset
        id: upload-release-asset-ubuntu-installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-ubuntu/installer.sh
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-ubuntu-generic.sh
          asset_content_type: text/x-shellscript
      - name: Upload Release Checksum
        id: upload-release-checksum-ubuntu-installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-ubuntu/installer.sh.sha256
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-ubuntu-generic.sh.sha256
          asset_content_type: text/plain

  release-docker:
    name: Build and Push Semgrep Docker Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get the version without leading v
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      - name: build-and-push
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: returntocorp/semgrep
          tags: ${{ steps.get_version.outputs.VERSION }}
      - name: update semgrep.live
        run: curl --fail -X POST https://semgrep.live/api/admin/update-docker

  release-osx:
    name: Build the OSX binaries
    runs-on: macos-latest
    steps:
      - name: Install System Deps
        run: brew install opam pkg-config coreutils
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          # This is just the Python version used to build the Nuitka executable
          python-version: 3.7
      - name: Run OSX release script
        run: ./release-scripts/osx-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: semgrep-osx-${{ github.sha }}
          path: artifacts.zip
  release-ubuntu-16-04:
    runs-on: ubuntu-latest
    container: returntocorp/sgrep-build:ubuntu-16.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Run Ubuntu build script
        run: ./release-scripts/ubuntu-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: semgrep-ubuntu-16.04-${{ github.sha }}
          path: artifacts.tar.gz

  ubuntu-release-script:
    runs-on: ubuntu-latest
    needs: [release-ubuntu-16-04]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get the version without leading v
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      - uses: actions/download-artifact@v1
        with:
          name: semgrep-ubuntu-16.04-${{ github.sha }}
          path: semgrep-ubuntu
      - name: Compute checksum
        run: echo ::set-output name=CHECKSUM::$(cat ./semgrep-ubuntu/artifacts.tar.gz | sha256sum | awk '{ print $1 }')
        id: checksum
      - name: Generate ubuntu release script
        run: |
          cat ./install-scripts/ubuntu-generic.sh |\
          sed 's/version=".*"/version="${{ steps.get_version.outputs.VERSION }}"/' |\
          sed 's/sha256=.*$/sha256="${{ steps.checksum.outputs.CHECKSUM }}"/'> install-scripts/installer.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: install-semgrep-ubuntu-generic-${{ github.sha }}
          path: install-scripts/installer.sh


  build-wheels-osx:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          # This is just the Python version to build the wheels
          python-version: 3.7
      - name: Build the wheels
        run: ./release-scripts/build-wheels.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: osx-wheel
          path: semgrep/dist.zip
  build-wheels-manylinux:
    runs-on: 'ubuntu-16.04'
    container: 'returntocorp/sgrep-build:ubuntu-16.04'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Setup Python
        run: |
          rm /usr/bin/python
          ln `which python3.7` /usr/bin/python
      - name: Install zip & musl-tools
        run: apt-get update && apt install -y zip musl-tools
      - name: Build the wheels
        run: ./release-scripts/build-wheels.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: manylinux-wheel
          path: semgrep/dist.zip
  test-wheels-manylinux:
    needs: ['build-wheels-manylinux']
    runs-on: 'ubuntu-16.04'
    container: 'quay.io/pypa/manylinux1_x86_64'
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: manylinux-wheel
          path: manylinux-wheel
      - name: unzip dist
        run: unzip ./manylinux-wheel/dist.zip
      - name: install package
        run: /opt/python/cp36-cp36m/bin/pip install dist/*.whl
      - name: test package
        working-directory: /opt/python/cp36-cp36m/bin/
        run: ./semgrep --version
      - name: test core
        run: ./semgrep-core -version
        working-directory: /opt/python/cp36-cp36m/bin/
      - name: e2e test
        working-directory: /opt/python/cp36-cp36m/bin/
        run: ./semgrep -l python ../lib/python3.6/code.py -e '$X == $X'
