on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create draft release

jobs:
  create_release:
    name: Create the Github Release
    runs-on: ubuntu-latest
    needs: [release-osx, release-ubuntu-16-04]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - uses: actions/download-artifact@v1
        with:
          name: semgrep-osx-${{ github.sha }}
          path: semgrep-osx
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Upload Release Asset
        id: upload-release-asset-osx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-osx/artifacts.zip
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-osx.zip
          asset_content_type: application/zip
      - uses: actions/download-artifact@v1
        with:
          name: semgrep-ubuntu-16.04-${{ github.sha }}
          path: semgrep-ubuntu
      - name: Upload Release Asset
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-ubuntu/artifacts.tar.gz
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-ubuntu-16.04.tgz
          asset_content_type: application/gzip
  release-osx:
    name: Build the OSX binaries
    runs-on: macos-latest
    # TODO: this is very similar to the mac-build workflow. Convert to an action
    steps:
      - name: Install System Deps
        run: brew install opam pkg-config coreutils
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run OSX release script
        run: ./release-scripts/osx-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: semgrep-osx-${{ github.sha }}
          path: artifacts.zip
  release-ubuntu-16-04:
    # TODO: this is very similar to the ubuntu-build workflow.
    # convert to github action to DRY
    runs-on: ubuntu-latest
    container: ocaml/opam2:ubuntu-16.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Ubuntu build script
        run: ./release-scripts/ubuntu-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: semgrep-ubuntu-16.04-${{ github.sha }}
          path: artifacts.tar.gz
