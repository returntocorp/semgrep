on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create draft release

jobs:
  create_release:
    name: Create the Github Release
    runs-on: ubuntu-latest
    needs: [release-osx, release-ubuntu-16-04]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

          # OSX
      - uses: actions/download-artifact@v1
        with:
          name: semgrep-osx-${{ github.sha }}
          path: semgrep-osx
      - name: Compute checksum
        run: cat ./semgrep-osx/artifacts.zip | sha256sum > ./semgrep-osx/artifacts.zip.sha256
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Upload Release Asset
        id: upload-release-asset-osx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-osx/artifacts.zip
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-osx.zip
          asset_content_type: application/zip
      - name: Upload Release Checksum
        id: upload-checksum-asset-osx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-osx/artifacts.zip.sha256
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-osx.zip.sha256
          asset_content_type: application/zip

          ## UBUNTU
      - uses: actions/download-artifact@v1
        with:
          name: semgrep-ubuntu-16.04-${{ github.sha }}
          path: semgrep-ubuntu
      - name: Compute checksum
        run: cat ./semgrep-ubuntu/artifacts.tar.gz | sha256sum > ./semgrep-ubuntu/artifacts.tar.gz.sha256
      - name: Upload Release Asset
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-ubuntu/artifacts.tar.gz
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-ubuntu-16.04.tgz
          asset_content_type: application/gzip
      - name: Upload Release Checksum
        id: upload-release-checksum-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./semgrep-ubuntu/artifacts.tar.gz.sha256
          asset_name: semgrep-${{ steps.get_version.outputs.VERSION }}-ubuntu-16.04.tgz.sha256
          asset_content_type: application/gzip

  release-docker:
    name: Build and Push Semgrep Docker Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get the version without leading v
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      - name: build-and-push
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: returntocorp/semgrep
          tags: ${{ steps.get_version.outputs.VERSION }}
      - name: update sgrep.live
        run: curl --fail -X POST https://semgrep.live/api/admin/update-docker

  release-osx:
    name: Build the OSX binaries
    runs-on: macos-latest
    steps:
      - name: Install System Deps
        run: brew install opam pkg-config coreutils
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run OSX release script
        run: ./release-scripts/osx-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: semgrep-osx-${{ github.sha }}
          path: artifacts.zip
  release-ubuntu-16-04:
    runs-on: ubuntu-latest
    container: returntocorp/sgrep-build:ubuntu-16.04
    steps:
      - name: Install System Deps
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends make m4 perl wget swi-prolog mercurial pkg-config build-essential
      - name: Install Python 3.7
        run: |
          sudo apt-get install -y zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libbz2-dev
          sudo wget https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tar.xz
          sudo tar xvf Python-3.7.7.tar.xz
          cd Python-3.7.7
          sudo ./configure --enable-shared
          sudo make altinstall
          sudo ldconfig /usr/local/lib
          python3.7 --version
          which python3.7
          /usr/local/bin/python3.7 -c "import bz2; print(bz2.__doc__)"
          sudo curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          sudo -H python3.7 get-pip.py
          pip3 --version
          ldd --version
          echo "Pls help me make this at least 3.7"
      - name: Install Git 2.18
        run: |
          sudo apt-get install -y --no-install-recommends libcurl4-openssl-dev libexpat1-dev gettext libz-dev libssl-dev build-essential autoconf
          cd /usr/src/;
          sudo wget https://github.com/git/git/archive/v2.18.0.tar.gz -O git.tar.gz;
          sudo tar -xf git.tar.gz;
          cd git-*;
          sudo make prefix=/usr/local all;
          sudo make prefix=/usr/local install;
          git --version;
      - name: Adjust permissions
        run: sudo chmod -R 777 . /github
      - name: OPAM setup
        run: opam switch --root /home/opam/.opam 4.07;
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Run Ubuntu build script
        run: ./release-scripts/ubuntu-release.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: semgrep-ubuntu-16.04-${{ github.sha }}
          path: artifacts.tar.gz
